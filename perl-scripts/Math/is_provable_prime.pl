#!/usr/bin/perl

# Author: Daniel "Trizen" È˜uteu
# License: GPLv3
# Date: 15 October 2016
# Website: https://github.com/trizen

# A provable primality test, based on Fermat's little theorem.

# Pseudoprimes are eliminated as following:
#
#    Let "n" be a Fermat pseudoprime to base 2. (OEIS: A001567)
#    Let "k" be the square root of "n".
#
# For each prime p <= k, we check:
#      p^(n-1) != 1 (mod n)
#
# When we encounter a number that satisfies the above inequality,
# we can say with a 100% certainty that the number is composite.

# We can improve on this upper bound, by letting "k" be the cube root of "n",
# as it is known that every Carmichael number has at least three prime factors.

# See also:
#   https://oeis.org/A001567
#   https://oeis.org/A177415
#   http://oeis.org/wiki/Carmichael_numbers
#   https://en.wikipedia.org/wiki/Fermat%27s_little_theorem

use 5.010;
use strict;
use warnings;

use Math::AnyNum;
use ntheory qw(powmod rootint next_prime);

sub is_provable_prime {
    my ($n) = @_;

    return 1 if $n == 2;
    return 0 if powmod(2, $n - 1, $n) != 1;

    # We can improve this upper bound a little bit further,
    # as it is known that every Carmichael number is squarefree.
    my $limit = rootint($n, 3);

    for (my $p = 3 ; $p <= $limit ; $p = next_prime($p)) {
        powmod($p, $n - 1, $n) != 1 and return 0;
    }

    return 1;
}

#
## Tests
#

say is_provable_prime(267_391);       # prime
say is_provable_prime(23_498_729);    # composite
say is_provable_prime(206_601);       # composite

my @pseudoprimes = (
    1105,          1729,          2465,          2701,          2821,          6601,
    8911,          10585,         15841,         18721,         29341,         31621,
    41041,         46657,         49141,         52633,         63973,         75361,
    83333,         101101,        104653,        115921,        126217,        162401,
    172081,        188461,        226801,        252601,        278545,        294409,
    314821,        334153,        340561,        399001,        410041,        449065,
    488881,        512461,        665281,        721801,        873181,        1569457,
    1857241,       1909001,       2531845,       5148001,       6189121,       8927101,
    9582145,       29111881,      31692805,      45877861,      48321001,      78120001,
    93614521,      128697361,     186393481,     278152381,     326266051,     509033161,
    544101481,     697906561,     824389441,     985052881,     1216631521,    1572279791,
    1574362441,    1574601601,    1576826161,    1580201501,    1587650401,    1705470481,
    1785507361,    1919767681,    2444950561,    2456536681,    2574243721,    3378014641,
    3801823441,    3880251649,    4138747921,    4531599073,    5061753061,    5165622721,
    5755495201,    6184062001,    6247519201,    6301286641,    8657319259,    9746188921,
    10276596961,   10573113601,   11360308765,   11498381245,   12917638801,   13139481601,
    13359590641,   13983852961,   14504883841,   15963577201,   16128207901,   16404668281,
    17797358881,   18929704561,   20832271201,   20871450601,   22567366081,   23169439801,
    23386231765,   23839510465,   24199173805,   24673060945,   25253424001,   28021044745,
    28328938561,   28619015041,   31513460161,   33294870001,   33449457385,   33643718641,
    33699117817,   34364331001,   34810801741,   39185716681,   39726535681,   40460634865,
    41068427401,   42358784689,   43018078321,   44155314001,   45496270561,   45498438721,
    47855469313,   48556911601,   51536134321,   52143084721,   52160413201,   52449631201,
    53038112821,   55677010753,   57136377481,   60155514901,   60218324101,   63461364481,
    63734663077,   65395882657,   67268735821,   70178754241,   71612520673,   75295291501,
    77494371361,   77538554731,   78229242001,   79182516673,   81576072001,   84973996801,
    87934630321,   91839605761,   93264355801,   93640190281,   98663375201,   98814611281,
    100403765281,  106711766785,  107230194721,  108374847301,  108401210281,  108574028641,
    110674226881,  112657860901,  114463320301,  116473418881,  116678502865,  117885129601,
    119655121153,  123898413601,  129092562721,  130767298561,  134575632361,  136819023901,
    137691502081,  138337200001,  147352368601,  160083312481,  160935430201,  162225866881,
    165062280241,  170246082721,  176337065521,  179655366241,  183323327041,  183402954901,
    186748297561,  188013914041,  191614761361,  193734725185,  194585282641,  206795542051,
    217409655421,  217631950801,  218037886561,  225527217301,  233562976921,  236744121601,
    240421311001,  240476945281,  253866936961,  255399883201,  262564853761,  267559673473,
    271498405201,  271665009001,  278252510641,  281065808881,  296173615921,  309060192001,
    311053585921,  313364803753,  334930453201,  336258388961,  349991500321,  353596857601,
    355954417057,  357588302401,  358710271921,  365558303881,  366122877121,  372422323585,
    372701967121,  378287958421,  385587092881,  393158352385,  393383358901,  396273849481,
    397685494801,  409383767521,  428898335041,  438201582721,  450302790001,  450944107201,
    456798004741,  459754220641,  463558136977,  463978762273,  478789131601,  489672201601,
    490801148929,  505299960001,  530022234001,  537303792961,  538524866881,  539128362241,
    564955634881,  568857053521,  576632707201,  577685689021,  581716699201,  592394212801,
    596331800065,  605075113897,  610788619441,  618225636601,  624972699001,  640795152817,
    663165099073,  678951965641,  681393505801,  688461039001,  707075363905,  724220695681,
    726093136561,  741133087201,  750497680801,  752861523745,  754243426801,  763993359361,
    783608031361,  791131417921,  802013573341,  818479705681,  825466407745,  827175444481,
    827308072801,  848146262041,  849886336801,  872988292801,  891671091697,  892734406201,
    901353242881,  904382759281,  908688931921,  937000454545,  942431143501,  948277465345,
    964824315841,  978388950529,  978999431761,  995148830593,  999219600889,  999236382301,
    999406030321,  999504724681,  1007312954401, 1009667264761, 1027428575401, 1034436761761,
    1044587930401, 1046981052001, 1047307947841, 1050436891945, 1059274863361, 1091613322801,
    1107329455051, 1112709407041, 1114881931081, 1137393180001, 1146120474721, 1154363197705,
    1156441536001, 1192803612001, 1197702539521, 1202752942561, 1239097165321, 1246083087601,
    1274052048193, 1274469175681, 1289277627001, 1297707269761, 1298520112501, 1300651971841,
    1304727708961, 1306827474481, 1322621788321, 1395599325121, 1409591554021, 1428425107201,
    1455498435001, 1460730633121, 1464865099621, 1467716913001, 1482932725561, 1508754800701,
    1538925436801, 1559869955281, 1587714546601, 1623218247001, 1661176887841, 1668045441601,
    1698571299601,

    (
     map { Math::AnyNum->new($_) }
       qw(
       1039849                    1152271
       1373653                    1537381
       1590751                    1943521
       9080191                    10403641
       465658903                  491646403
       511408171                  1040295691
       2242724851                 6635692801
       25366866661                239626837621
       277376554153               898547205403
       2028576353203              2152302898747
       2237630988421              2925135872011
       3398697686971              3474749660383
       3892757297131              5563452248551
       14910591535003             25768686677581
       31041191790703             47227901175703
       55769868765703             81809208684811
       97523202353851             142881626426311
       213236474721031            272075712495931
       410611065089851            1262316063544903
       13856432344989391          15362221660259671
       19175868175066021          28518540688833751
       29367406268066791          30807189239220703
       33558559262764903          58211961956939251
       96297725105645671          120175393101413203
       121845641818748851         209881968380913403
       568680168659018851         1858358298078962371
       2370020490966486403        2756364025846681711
       3088203196596599971        4017003893481614311
       4972725568723375711        15334442429189241403
       19600159758889166731       35051193821423205091
       36230247500976456931       43628926643584801291
       59824592589818432503       85295775262240125703
       99120207367868007331       157351910012685225991
       172503857515521019951      210949232607414129403
       349228439450094648151      396594161005255290703
       412791881969631645991      444819251976732934003
       455308758219013329403      474331012834923682903
       553755470998517690671      572947382787469329331
       573990913701073033903      704070052348199167711
       773464267476853150771      921469402465267819411
       1240689310336284744781     1502965791107391010051
       1518132547139756696371     1574864695514005075351
       1662627626869742333191     2617057824672461696191
       2794779165895069882231     2867561004669023153611
       3472182119018573666371     3513477856210217250391
       3692761975706924194903     4108242311124069824371
       5845333269507641494903     7078207115335286220751
       8295052922167327023151     9499575099400825069711
       9841224522146458742731     13247749459499406215491
       51667297411913075406403    68961329718862670335711
       101446881407288556294403   135774535026554500549411
       189452997113368438678231   274336792605571396384531
       380615114458801466323003   602624343600644131573003
       630758432632497023036071   710505061300429626402991
       828939430049276881503631   991529172691423351229611
       1183085514906567182033203  1508063857705074485790703
       1897844266477037739720511  1962383802644146523898691
       2135201436873587296329391  3885874723338974789186611
       4604466464657330536403911  5203073974548398584401811
       5403390834139298121530503  6048130036093521435825391
       6994430199339516203593051  7197673464148272587528203
       8000031293140601835421003  8031151951625760386288203
       8063333906687749281446011  8385807928645377962827651
       10627945015121687221861591 16925858399575705244213251
       18066535549432303237551253 18115413527322036686653903
       18123419880437997086265151 18417985945305102057476611
       30129217437471248865239551 32685676894384283679960403
       35549795764015104522989503 76963568720428328358838771
       92737632541325090700295531 1553360566073143205541002401
       200000000135062271492802271468294969951

       70416887142533176417390411931483993124120785701395296424001
       2884167509593581480205474627684686008624483147814647841436801
       4754868377601046732119933839981363081972014948522510826417784001
       1334733877147062382486934807105197899496002201113849920496510541601
       260849323075371835669784094383812120359260783810157225730623388382401
       112505380450296606970338459629988782604252033209350010888227147338120001
       )
    ),
);

foreach my $pp (@pseudoprimes) {
    is_provable_prime($pp) && warn "error for pseudoprime: $pp";
}

my $count = 0;
my $limit = 100000;
foreach my $i (0 .. $limit) {
    ++$count if is_provable_prime($i);
}

say "There are $count primes bellow $limit";
